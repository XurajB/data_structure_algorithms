package problems.array;

/**
 * Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Find the letter that was added in t.
 */
public class FindTheDifference {
    public static void main(String[] args) {
        System.out.println(findTheDifference("abcd", "abcde"));
    }

    // trivial solution is to use 1 hashmap
    // O(N), O(1)
    private static char findTheDifference(String s, String t) {
       int sum = t.charAt(s.length());
       for (int i = 0; i < s.length(); i++) {
           sum -= s.charAt(i);
           sum += t.charAt(i);
       }

       return (char) sum;
    }

    // O(N), O(1)
    private static char findTheDifference2(String s, String t) {
        // Initialize ch with 0, because 0 ^ X = X
        // 0 when XORed with any bit would not change the bits value.
        char ch = 0;
        // XOR all the characters of both s and t.
        for (int i = 0; i < s.length(); i += 1) {
            ch ^= s.charAt(i);
        }
        for (int i = 0; i < t.length(); i += 1) {
            ch ^= t.charAt(i);
        }
        // What is left after XORing everything is the difference.
        return ch;
    }
}
